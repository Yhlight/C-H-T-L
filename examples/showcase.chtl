-- CHTL Compiler Feature Showcase
-- This file demonstrates all CHTL language features

[Configuration] {
    DEBUG_MODE = false;
    INDEX_INITIAL_COUNT = 0;
    
    [Name] {
        CUSTOM_STYLE = [@Style, @style];
        TEMPLATE_ELEMENT = @Element;
    }
}

-- Import external resources
[Import] @Html from "components/header.html" as siteHeader;
[Import] @Style from "styles/theme.css";
[Import] [Template] @Style DarkTheme from "themes/dark.chtl";
[Import] * from "utils.chtl";

-- Define namespace
[Namespace] MyApp {
    -- Template definitions
    [Template] @Style ButtonStyle {
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.3s;
        
        inherit @Style DarkTheme;
    }
    
    [Template] @Element Card {
        div {
            class: card;
            style {
                @Style ButtonStyle;
                background: white;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            
            -- Card header
            div {
                class: card-header;
                h3 { text { "Card Title" } }
            }
            
            -- Card body
            div {
                class: card-body;
            }
        }
    }
    
    [Template] @Var Colors {
        primary: "#007bff";
        secondary: "#6c757d";
        success: "#28a745";
        danger: "#dc3545";
    }
}

-- Custom definitions
[Custom] @Style FlexCenter {
    display,
    justify-content,
    align-items;
}

[Custom] @Element Modal {
    div {
        class: modal;
        style {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        
        div {
            class: modal-content;
        }
    }
}

-- Main document structure
html {
    head {
        title { text { "CHTL Feature Showcase" } }
        
        -- Global styles using Origin
        [Origin] @Style globalStyles {
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                line-height: 1.6;
            }
        }
        
        -- Inline styles
        style {
            body {
                @Style FlexCenter {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                }
                min-height: 100vh;
                background: Colors(primary);
            }
            
            -- CHTL special syntax
            .container {
                max-width: 1200px;
                margin: 0 auto;
                padding: 20px;
                
                &:hover {
                    transform: scale(1.01);
                }
            }
        }
    }
    
    body {
        -- Use imported header
        @Html siteHeader;
        
        -- Main container
        div {
            class: container;
            
            -- Page title
            h1 {
                style {
                    color: MyApp.Colors(primary);
                    text-align: center;
                    margin-bottom: 2rem;
                }
                text { "Welcome to CHTL" }
            }
            
            -- Use template from namespace
            @Element Card from MyApp {
                -- Customize card content using operations
                div[1] {  -- Access card-body
                    p {
                        text { "This card demonstrates template usage with customization." }
                    }
                    
                    -- Insert button
                    insert at bottom {
                        button {
                            class: btn btn-primary;
                            style {
                                @Style ButtonStyle from MyApp;
                            }
                            text { "Click Me" }
                        }
                    }
                }
            }
            
            -- Custom element with modifications
            @Element Modal {
                -- Delete and replace content
                delete div[0];
                
                replace div[0] {
                    div {
                        class: custom-modal-content;
                        style {
                            background: white;
                            padding: 30px;
                            border-radius: 8px;
                        }
                        
                        h2 { text { "Modal Title" } }
                        p { text { "Modal content goes here." } }
                    }
                }
            }
            
            -- Raw JavaScript embedding
            [Origin] @JavaScript {
                document.addEventListener('DOMContentLoaded', function() {
                    const buttons = document.querySelectorAll('.btn');
                    buttons.forEach(btn => {
                        btn.addEventListener('click', function() {
                            console.log('Button clicked!');
                        });
                    });
                });
            }
        }
        
        -- Footer
        footer {
            style {
                margin-top: 50px;
                padding: 20px;
                text-align: center;
                background: #f8f9fa;
            }
            
            p {
                text { "Â© 2024 CHTL Compiler - Feature Showcase" }
            }
            
            -- Inline origin for copyright symbol
            [Origin] @Html inline &copy;;
        }
    }
}