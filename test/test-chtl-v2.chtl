// CHTL v2 语法测试
// 使用纯 CHTL 语法，不使用 HTML 标签

// ========== 导入声明 ==========
[Import] @Style "styles/theme.css"
[Import] @JavaScript "scripts/utils.js"
[Import] @Chtl "components/header.chtl"
[Import] @Element CHTL::Forms/Input
[Import] @Element "custom-button.chtl" as CustomButton

// ========== 全局样式 ==========
style {
    text {
        :root {
            --primary-color: #007bff;
            --secondary-color: #6c757d;
            --font-family: system-ui, -apple-system, sans-serif;
        }
        
        * {
            box-sizing: border-box;
        }
        
        body {
            margin: 0;
            padding: 0;
            font-family: var(--font-family);
            line-height: 1.6;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
    }
}

// ========== 模板定义 ==========
[Template] @Element Card(title, content, footer) {
    div .card {
        h3 .card-header { {{title}} }
        div .card-body { {{content}} }
        
        // 条件渲染
        {{#if footer}}
            div .card-footer { {{footer}} }
        {{/if}}
    }
}

[Template] @Style ButtonTheme {
    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
    }
    
    .btn-primary {
        background-color: var(--primary-color);
        color: white;
    }
    
    .btn-primary:hover {
        background-color: darken(var(--primary-color), 10%);
    }
}

// ========== HTML 结构 ==========
html {
    head {
        meta charset="UTF-8"
        meta name="viewport" content="width=device-width, initial-scale=1.0"
        title { "CHTL v2 综合测试" }
        @ButtonTheme
    }
    
    body {
        header .header {
            div .container {
                h1 { "CHTL v2 编译器" }
                nav {
                    ul .nav {
                        li { a href="#home" { "首页" } }
                        li { a href="#features" { "功能" } }
                        li { a href="#docs" { "文档" } }
                    }
                }
            }
        }
        
        main .container {
            // 使用模板
            @Card(
                title: "欢迎使用 CHTL",
                content: "这是一个强大的组件化 HTML 模板语言",
                footer: "了解更多..."
            )
            
            section #features {
                h2 { "核心功能" }
                
                div .feature-grid {
                    // 循环渲染
                    {{#each features as feature}}
                        div .feature-item {
                            h3 { {{feature.title}} }
                            p { {{feature.description}} }
                        }
                    {{/each}}
                }
            }
            
            // 局部样式示例
            div .demo-box {
                style {
                    width: 300px;
                    height: 200px;
                    background-color: #f0f0f0;
                    
                    .content {
                        padding: 20px;
                    }
                    
                    &:hover {
                        background-color: #e0e0e0;
                    }
                }
                
                div .content {
                    h3 { "局部样式演示" }
                    p { "鼠标悬停查看效果" }
                }
            }
            
            // 局部脚本示例
            div #interactive {
                button .btn .btn-primary #demo-btn { "点击我" }
                
                script {
                    {{#demo-btn}}.listen('click', () => {
                        alert('Hello from CHTL-JS!');
                    });
                }
            }
        }
        
        footer {
            div .container {
                p { "© 2024 CHTL Project" }
            }
        }
        
        // 全局脚本
        script {
            text {
                // 初始化数据
                window.features = [
                    { title: "组件化", description: "强大的组件系统" },
                    { title: "模板", description: "灵活的模板机制" },
                    { title: "扩展性", description: "通过 CJMOD 无限扩展" }
                ];
            }
        }
    }
}