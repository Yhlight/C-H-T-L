// 多编译器系统演示
// 展示CHTL、CSS、JavaScript和CHTL-JS的独立工作

[Template] @Style ButtonStyle {
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
}

body {
    style {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 20px;
        background-color: #f5f5f5;
    }
    
    div {
        style {
            .container {
                max-width: 1200px;
                margin: 0 auto;
                background-color: white;
                padding: 30px;
                border-radius: 8px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
        }
        
        h1 {
            style {
                color: #333;
                text-align: center;
                margin-bottom: 30px;
            }
            
            text {
                "CHTL 多编译器系统演示"
            }
        }
        
        // 原生CSS示例
        section {
            style {
                .section-title {
                    color: #666;
                    border-bottom: 2px solid #e0e0e0;
                    padding-bottom: 10px;
                    margin-bottom: 20px;
                }
            }
            
            h2 {
                text { "1. 原生CSS验证" }
            }
            
            [Origin] @Style {
                /* 这是原生CSS代码，由CSS编译器处理 */
                .native-css-example {
                    display: flex;
                    gap: 20px;
                    margin-top: 20px;
                }
                
                .native-css-example > div {
                    flex: 1;
                    padding: 15px;
                    background-color: #f0f0f0;
                    border-radius: 4px;
                }
                
                /* CSS变量 */
                :root {
                    --primary-color: #3498db;
                    --secondary-color: #2ecc71;
                }
                
                .use-css-var {
                    color: var(--primary-color);
                    background-color: var(--secondary-color);
                }
            }
        }
        
        // 原生JavaScript示例
        section {
            h2 {
                text { "2. 原生JavaScript验证" }
            }
            
            button {
                id: native-js-btn;
                style {
                    @Style ButtonStyle;
                    background-color: #3498db;
                    color: white;
                }
                
                text { "原生JS按钮" }
            }
            
            div {
                id: native-output;
                style {
                    margin-top: 10px;
                    padding: 10px;
                    background-color: #ecf0f1;
                    border-radius: 4px;
                    min-height: 30px;
                }
            }
            
            [Origin] @JavaScript {
                // 这是原生JavaScript代码，由JavaScript编译器处理
                (function() {
                    'use strict';
                    
                    // 使用标准DOM API
                    const button = document.getElementById('native-js-btn');
                    const output = document.getElementById('native-output');
                    
                    // ES6特性
                    class Counter {
                        constructor() {
                            this.count = 0;
                        }
                        
                        increment() {
                            this.count++;
                            return this.count;
                        }
                    }
                    
                    const counter = new Counter();
                    
                    button.addEventListener('click', function() {
                        const count = counter.increment();
                        output.textContent = `原生JS点击次数: ${count}`;
                    });
                    
                    // 异步操作
                    async function fetchData() {
                        return new Promise(resolve => {
                            setTimeout(() => resolve('数据加载完成'), 1000);
                        });
                    }
                    
                    // 使用Promise
                    fetchData().then(data => {
                        console.log(data);
                    });
                })();
            }
        }
        
        // CHTL-JS扩展示例
        section {
            h2 {
                text { "3. CHTL-JS扩展语法" }
            }
            
            button {
                style {
                    @Style ButtonStyle;
                    background-color: #e74c3c;
                    color: white;
                    
                    .chtl-js-btn {
                        margin-right: 10px;
                    }
                    
                    &:hover {
                        background-color: #c0392b;
                    }
                }
                
                text { "CHTL-JS按钮" }
                
                script {
                    // 这是CHTL-JS代码，由CHTL-JS编译器处理
                    let clickCount = 0;
                    
                    // 使用增强选择器
                    {{chtl-js-btn}}->addEventListener('click', () => {
                        clickCount++;
                        {{chtl-output}}->textContent = `CHTL-JS点击次数: ${clickCount}`;
                    });
                    
                    // 使用listen方法
                    {{chtl-js-btn}}->listen({
                        mouseenter: () => {{chtl-js-btn}}->style.transform = 'scale(1.05)',
                        mouseleave: () => {{chtl-js-btn}}->style.transform = 'scale(1)'
                    });
                }
            }
            
            div {
                id: chtl-output;
                style {
                    margin-top: 10px;
                    padding: 10px;
                    background-color: #ecf0f1;
                    border-radius: 4px;
                    min-height: 30px;
                }
            }
        }
        
        // 混合使用示例
        section {
            h2 {
                text { "4. 混合使用各种编译器" }
            }
            
            div {
                style {
                    .demo-grid {
                        display: grid;
                        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                        gap: 20px;
                        margin-top: 20px;
                    }
                }
                
                // CHTL定义的卡片
                div {
                    style {
                        .card {
                            padding: 20px;
                            background-color: #fff;
                            border: 1px solid #ddd;
                            border-radius: 8px;
                            transition: transform 0.3s;
                        }
                        
                        &:hover {
                            transform: translateY(-5px);
                            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
                        }
                    }
                    
                    h3 {
                        text { "CHTL卡片" }
                    }
                    
                    p {
                        text { "使用CHTL语法定义" }
                    }
                    
                    script {
                        // CHTL-JS代码
                        {{card}}->addEventListener('click', () => {
                            {{card}}->style.backgroundColor = '#' + Math.floor(Math.random()*16777215).toString(16);
                        });
                    }
                }
                
                // 原生样式卡片
                div {
                    class: native-card;
                    
                    [Origin] @Style {
                        .native-card {
                            padding: 20px;
                            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                            color: white;
                            border-radius: 8px;
                            cursor: pointer;
                        }
                    }
                    
                    h3 {
                        text { "原生CSS卡片" }
                    }
                    
                    p {
                        text { "使用原生CSS渐变" }
                    }
                }
            }
        }
        
        // 动画示例
        section {
            h2 {
                text { "5. 动画演示" }
            }
            
            div {
                id: animated-box;
                style {
                    width: 100px;
                    height: 100px;
                    background-color: #3498db;
                    border-radius: 8px;
                    margin: 20px auto;
                    cursor: pointer;
                }
                
                script {
                    {{animated-box}}->addEventListener('click', () => {
                        animate({
                            duration: 1000,
                            easing: 'ease-in-out',
                            
                            begin: {
                                transform: 'scale(1) rotate(0deg)',
                                opacity: 1
                            },
                            
                            end: {
                                transform: 'scale(1.5) rotate(360deg)',
                                opacity: 0.5
                            },
                            
                            callback: () => {
                                {{animated-box}}->style.transform = 'scale(1) rotate(0deg)';
                                {{animated-box}}->style.opacity = '1';
                            }
                        });
                    });
                }
            }
            
            p {
                style {
                    text-align: center;
                    color: #666;
                }
                
                text {
                    "点击方块查看动画效果"
                }
            }
        }
    }
}