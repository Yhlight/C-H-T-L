-- CHTL Standard Library - Base Module
-- Version: 1.0.0
-- Description: Core components and utilities

[Template] @Element Container {
    -- A basic container with common layout options
    props: {
        width: "string"
        height: "string"
        padding: "string"
        margin: "string"
        direction: "string"  -- "row" | "column"
    }
    
    div .container {
        style {
            width: {{&}}.props.width || "100%";
            height: {{&}}.props.height || "auto";
            padding: {{&}}.props.padding || "0";
            margin: {{&}}.props.margin || "0";
            display: "flex";
            flex-direction: {{&}}.props.direction || "column";
        }
        
        slot  -- Allow child content
    }
}

[Template] @Element Card {
    -- A card component with shadow and padding
    props: {
        title: "string"
        shadow: "boolean"
    }
    
    div .card {
        style {
            padding: 20px;
            background: white;
            border-radius: 8px;
            box-shadow: {{&}}.props.shadow ? "0 2px 8px rgba(0,0,0,0.1)" : "none";
        }
        
        h3 .card-title {
            {{&}}.props.title
            style {
                margin-top: 0;
                margin-bottom: 16px;
                color: #333;
            }
        }
        
        div .card-content {
            slot
        }
    }
}

[Template] @Element Button {
    -- A customizable button component
    props: {
        variant: "string"  -- "primary" | "secondary" | "danger"
        size: "string"     -- "small" | "medium" | "large"
        disabled: "boolean"
        onClick: "function"
    }
    
    button {
        slot
        onclick: {{&}}.props.onClick
        disabled: {{&}}.props.disabled
        
        style {
            padding: {{&}}.props.size === "small" ? "6px 12px" : 
                    {{&}}.props.size === "large" ? "12px 24px" : "8px 16px";
            font-size: {{&}}.props.size === "small" ? "14px" : 
                      {{&}}.props.size === "large" ? "18px" : "16px";
            border: none;
            border-radius: 4px;
            cursor: {{&}}.props.disabled ? "not-allowed" : "pointer";
            opacity: {{&}}.props.disabled ? 0.6 : 1;
            transition: all 0.2s;
            
            background: {{&}}.props.variant === "primary" ? "#007bff" :
                       {{&}}.props.variant === "danger" ? "#dc3545" : "#6c757d";
            color: white;
        }
        
        :hover {
            background: {{&}}.props.variant === "primary" ? "#0056b3" :
                       {{&}}.props.variant === "danger" ? "#c82333" : "#5a6268";
        }
    }
}